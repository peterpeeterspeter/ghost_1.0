# ============================================================================
# Ghost Mannequin Pipeline - Environment Configuration
# ============================================================================

# Development/Production Environment
NODE_ENV=development

# ============================================================================
# Required API Keys
# ============================================================================

# FAL.AI API Key for background removal (Bria 2.0)
# Get your key from: https://fal.ai/dashboard
FAL_API_KEY=your_fal_api_key_here

# Google Gemini API Key for analysis and rendering
# Get your key from: https://aistudio.google.com/app/apikey
GEMINI_API_KEY=your_gemini_api_key_here

# Freepik API Key for Gemini 2.5 Flash rendering (less restrictive content policies)
# Get your key from: https://www.freepik.com/api
FREEPIK_API_KEY_DISABLED=your_freepik_api_key_here

# ============================================================================
# Optional: Supabase Configuration (for storage)
# ============================================================================

# Supabase project URL
SUPABASE_URL=https://your-project.supabase.co

# Supabase anonymous key
SUPABASE_ANON_KEY=your_supabase_anon_key_here

# Supabase service role key (for server-side operations)
SUPABASE_SERVICE_ROLE_KEY=your_supabase_service_role_key_here

# ============================================================================
# Pipeline Configuration
# ============================================================================

# Ghost mannequin rendering model (simple choice)
RENDERING_MODEL=ai-studio         # Options: 'ai-studio' (default), 'gemini-flash', 'seedream' - freepik-gemini disabled

# Rendering approach (Multiple options available)
RENDERING_APPROACH=optimized     # Options: 'optimized' (recommended), 'json', 'distilled'
#   - 'optimized': Simple JSON optimization like jsonprompt.it + Flash (RECOMMENDED)
#   - 'json': Complex structured JSON payload with full template to Flash 2.5
#   - 'distilled': Use Gemini 2.0 Flash-Lite to create 350-word natural prompts

# ============================================================================
# CCJ Pipeline Configuration (NEW Two-Tier JSON Approach)
# ============================================================================

# Enable CCJ (Core Contract JSON) pipeline - replaces consolidation + rendering with compact approach
USE_CCJ_PIPELINE=false           # Set to 'true' to enable CCJ two-tier system

# CCJ Integration mode
CCJ_INTEGRATION_MODE=replace_consolidation  # Options:
#   - 'replace_consolidation': Replace consolidation + rendering stages with CCJ
#   - 'parallel_comparison': Run both CCJ and legacy for comparison
#   - 'ccj_only': Skip legacy consolidation entirely

# CCJ Quality Assurance
CCJ_ENABLE_QA=true              # Enable CCJ-based QA validation
CCJ_ENABLE_RETRY=true           # Enable bounded retry on QA failures
CCJ_MAX_IMAGE_SIZE=2048         # Max image size (downscales to 1536 on retry)
CCJ_RETRY_IMAGE_SIZE=1536       # Retry image size for performance

# CCJ Development Options
CCJ_ENABLE_HINTS_PASSTHROUGH=false  # Include hints JSON with model (for debugging)
CCJ_FORCE_SHORT_PROMPT=false       # Force minimal prompt format
CCJ_LOG_LEVEL=info                  # CCJ-specific logging level

# Processing timeouts (in milliseconds)
TIMEOUT_BACKGROUND_REMOVAL=30000  # 30 seconds
TIMEOUT_ANALYSIS=90000           # 90 seconds (complex garment analysis)
TIMEOUT_ENRICHMENT=120000        # 120 seconds (enrichment analysis)
TIMEOUT_CONSOLIDATION=45000      # 45 seconds (JSON consolidation)
TIMEOUT_RENDERING=300000         # 300 seconds (ghost mannequin generation - increased for complex JSON)
TIMEOUT_QA=60000                 # 60 seconds (QA analysis)

# QA Loop configuration
ENABLE_QA_LOOP=true              # Enable automatic quality assurance
MAX_QA_ITERATIONS=2              # Maximum QA correction attempts

# File upload limits
MAX_FILE_SIZE=10485760           # 10MB in bytes
MAX_REQUEST_SIZE=52428800        # 50MB in bytes (for base64 images)

# ============================================================================
# Next.js Configuration
# ============================================================================

# Next.js hostname and port (for development)
HOSTNAME=localhost
PORT=3000

# ============================================================================
# Security Configuration
# ============================================================================

# CORS origins (comma-separated)
CORS_ORIGINS=http://localhost:3000,https://yourdomain.com

# Rate limiting (requests per minute)
RATE_LIMIT=10

# ============================================================================
# Logging Configuration
# ============================================================================

# Log level (debug, info, warn, error)
LOG_LEVEL=info

# Enable request logging
ENABLE_REQUEST_LOGGING=true

# Enable pipeline stage logging
ENABLE_PIPELINE_LOGGING=true

# ============================================================================
# Optional: External Services
# ============================================================================

# Webhook URLs for processing notifications
WEBHOOK_URL_SUCCESS=
WEBHOOK_URL_FAILURE=

# Email notifications (if using a service like SendGrid)
SENDGRID_API_KEY=
FROM_EMAIL=

# ============================================================================
# Advanced Configuration
# ============================================================================

# Pipeline concurrency limits
MAX_CONCURRENT_PIPELINES=5

# Background removal model preferences
FAL_BRIA_MODEL_VERSION=2.0

# Gemini model configurations
GEMINI_ANALYSIS_MODEL=gemini-2.0-flash-lite
GEMINI_FLASH_MODEL=gemini-2.5-flash

# Default output settings
DEFAULT_OUTPUT_SIZE=2048x2048
DEFAULT_BACKGROUND_COLOR=white

# Files API Optimization (Google Gemini Files API)
ENABLE_EARLY_FILES_UPLOAD=true    # Upload cleaned images to Files API immediately
                                   # after background removal for 97% token reduction

# Consolidation Cost Control
ALLOW_EXPENSIVE_CONSOLIDATION_RETRIES=false  # Disable expensive retry attempts
                                              # Use cost-efficient fallback instead

# ============================================================================
# Development Only
# ============================================================================

# Enable development features
ENABLE_DEV_ENDPOINTS=true

# Mock API responses (for testing without API credits)
MOCK_FAL_API=false
MOCK_GEMINI_API=false

# Skip expensive operations during development
SKIP_BACKGROUND_REMOVAL=false
SKIP_RENDERING=false
